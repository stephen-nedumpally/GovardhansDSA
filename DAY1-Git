Day 1 : 29/10/2024

Special Thanks to Kunal Kushwaha

1. Initialising Git -> git init
This would create .git file that tracks the changes in a project
2. Checking the changes in a project -> git status
This would show Changes not staged for commit, and changes added to commit

A great example Kuna uses in the video is a photoshoot session in a wedding.
People in the wedding->People queuing near the stage for photos->People taking pictures->Photographs being stored to the album >>
Files in the project being tracked by .git-> 
3. We use git add . to add changes to be committed-
4. git commit -m "Msg to be added"

After queuing people near stage(ie after git add .)-> we can remove them by using git rm --cache <file>

5.Viewing the entire history of the project: git log
6.Each commit in the project is a snapshot of the project at each point
To reset the project to a previous snap-> git reset <commit id>
7.To remove people from the queuing area and put them elsewhere such that they can be called later
ie removing all the changes that you've added-> git stash
8.To bring back the stashed changes-> git stash pop
9.TO clear the stash-> git stash clear

>Create a new Github Repository

10.git remote add origin <url> to connect your local project to this repository
11.git remote -v ->it would show all the urls attached to the project

12.git push origin main

Branches
13. git branch <branchname> -> to create a new branch
14. git checkout <branchname> -> to commit to this branch, ie head is pointing to this branch

15. git merge <branchname> -> to merge another branch but you need to point to the main to merge to the main branch

Working on existing project on github:
Fork -> to copy an existing repo to your account
16. git clone <url> -> to download the repository

The original repo rl from which you've forked is called upstream
17. git remote add upstream <original repo url>


Create a PULL Request ie requesting to be merged to the main branch happens on github, but a branch can have only one pull request

